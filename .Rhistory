library(Evoluty)
install.packages("formatR")
formatR::tidy_dir("R")
individual <- setRefClass("neuralNetwork", fields = list(id = integer,
architecture = character,
evaluated = boolean,
loss = double,
metric = double,
model = character))
individual <- setRefClass("neuralNetwork", fields = list(id = "integer",
architecture = "character",
evaluated = "boolean",
loss = "double",
metric = "double",
model = "character"))
individual <- setRefClass("neuralNetwork", fields = list(id = "integer",
architecture = "character",
evaluated = "character",
loss = "double",
metric = "double",
model = "character"))
individual <- setRefClass("neuralNetwork", fields = list(id = "integer",
architecture = "character",
evaluated = "character",
loss = "numeric",
metric = "numeric",
model = "character"))
neuralNetwork <- setRefClass("neuralNetwork", fields = list(id = "integer",
architecture = "character",
evaluated = "character",
loss = "numeric",
metric = "numeric",
model = "character"))
boolean()
bool
boolean
individual <- neuralNetwork(1, "nnn/nn/nnnn", "FALSE", 0.01, 0.9673, "model.h5")
individual <- neuralNetwork(id = 1, architecture = "nnn/nn/nnnn", evaluated = "FALSE", loss = 0.01, metric = 0.9673, model = "model.h5")
individual <- neuralNetwork(id = 1L, architecture = "nnn/nn/nnnn", evaluated = "FALSE", loss = 0.01, metric = 0.9673, model = "model.h5")
neuralNetwork <- setRefClass("neuralNetwork", fields = list(id = "numeric",
architecture = "character",
evaluated = "character",
loss = "numeric",
metric = "numeric",
model = "character"))
individual <- neuralNetwork(id = 1, architecture = "nnn/nn/nnnn", evaluated = "FALSE", loss = 0.01, metric = 0.9673, model = "model.h5")
individual
individual <- neuralNetwork(id = 1, architecture = "nnn/nn/nnnn", evaluated = "FALSE", loss = 0.0327, metric = 0.9673, model = "model.h5")
individual
library(Evoluty)
devtools::use_package("gramEvol", "Imports")
install.packages("devtools")
devtools::use_package("gramEvol", "Imports")
usethis::use_package("ggplot2")
library(Evoluty)
